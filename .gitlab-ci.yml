variables:
  NODE_VERSION: 18

stages:
  - build
  - test
  - publish

before_script:
  - wget https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64 -O
    /usr/bin/jq
  - chmod +x /usr/bin/jq
  - yarn install

typescript-compile:
  stage: build
  image: node:${NODE_VERSION}
  script:
    - yarn compile
    - yarn compile:cjs
  artifacts:
    paths:
      - ${CI_PROJECT_DIR}/packages/commons/dist/
      - ${CI_PROJECT_DIR}/packages/commons/dist-cjs/
      - ${CI_PROJECT_DIR}/packages/generator/dist/
    expire_in: 1 hour

test:
  stage: test
  image: node:${NODE_VERSION}
  script:
    - yarn test

publish-commons:
  stage: publish
  image: node:${NODE_VERSION}
  script:
    - cd ${CI_PROJECT_DIR}/packages/commons
    - npm version ${CI_COMMIT_TAG} --git-tag-version false
      --no-workspaces-update
    - |
      yarn config set npmScopes.mittwald.npmAuthToken "${GITHUB_TOKEN}"
      yarn npm publish
    - |
      yarn config set npmScopes.mittwald.npmAuthToken "${NPMJS_TOKEN}"
      yarn config set npmScopes.mittwald.npmPublishRegistry "https://registry.npmjs.org"
      yarn npm publish --access=public
  only:
    - tags

publish-models:
  stage: publish
  image: node:${NODE_VERSION}
  script:
    - cd ${CI_PROJECT_DIR}/packages/models
    - npm version ${CI_COMMIT_TAG} --git-tag-version false
      --no-workspaces-update
    - |
      yarn config set npmScopes.mittwald.npmAuthToken "${GITHUB_TOKEN}"
      yarn npm publish
    - |
      yarn config set npmScopes.mittwald.npmAuthToken "${NPMJS_TOKEN}"
      yarn config set npmScopes.mittwald.npmPublishRegistry "https://registry.npmjs.org"
      yarn npm publish --access=public
  only:
    - tags

publish-client:
  stage: publish
  image: node:${NODE_VERSION}
  script:
    - cd ${CI_PROJECT_DIR}/packages/mittwald
    - yarn generate:client
    - git status
    - |
      if [ ${CI_PIPELINE_SOURCE} == "schedule" ] ; then
        git config user.name "Mittwald Machine"
        git config user.email "opensource@mittwald.de"
      else
        git config user.name "${GITLAB_USER_NAME}"
        git config user.email "${GITLAB_USER_EMAIL}"
      fi

      if [ $(git status --porcelain . | wc -l) -gt 0 ] || [ -n "${FORCE_PUBLISH}" ] ; then
        npm version --no-workspaces-update --no-git-tag-version patch

        # Make sure the generated version is available in the compiled code;
        # this is necessary for the generated client to be able to report its
        # own version to the API.
        VERSION=$(jq -r '.version' package.json)
        echo "export const MittwaldAPIClientVersion = '${VERSION}';" > dist/version.js
        echo "export declare const MittwaldAPIClientVersion = '${VERSION}';" > dist/version.d.ts

        git add .
        git commit -m "Update generated client";
        
        git push "https://project:${PAT}@${CI_REPOSITORY_URL#*@}" "HEAD:${CI_COMMIT_BRANCH}"

        yarn config set npmScopes.mittwald.npmAuthToken "${GITHUB_TOKEN}"
        yarn npm publish

        yarn config set npmScopes.mittwald.npmAuthToken "${NPMJS_TOKEN}"
        yarn config set npmScopes.mittwald.npmPublishRegistry "https://registry.npmjs.org"
        yarn npm publish --access=public
      fi
  only:
    - schedules
    - web

publish-client-dev:
  stage: publish
  image: node:${NODE_VERSION}
  script:
    - cd ${CI_PROJECT_DIR}/packages/mittwald
    - yarn generate:client-dev
    - |
      yarn config set npmScopes.mittwald.npmPublishRegistry https://npm.mittwald.it
      yarn config set npmAuthToken ${NPM_TOKEN}
    - npm version --no-workspaces-update --no-git-tag-version
      1.0.0-alpha.${CI_JOB_ID}
    - yarn npm publish
  only:
    - schedules
    - web
  tags:
    - coab
    - dev
    - incluster
    - kubernetes

publish-generator:
  stage: publish
  image: node:${NODE_VERSION}
  script:
    - cd ${CI_PROJECT_DIR}/packages/generator
    - |
      yarn config set npmScopes.mittwald.npmPublishRegistry https://npm.mittwald.it
      yarn config set npmAuthToken ${NPM_TOKEN}
    - npm version --no-workspaces-update --no-git-tag-version ${CI_COMMIT_TAG}
    - yarn npm publish
  only:
    - tags
