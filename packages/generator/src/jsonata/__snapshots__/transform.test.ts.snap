// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`transformOpenAPIExpression.evaluate() creates correct snapshots for 'Pet Store' example 1`] = `
{
  "components": {
    "parameters": {},
    "requestBodies": {
      "Pet": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Pet",
              "properties": {
                "category": {
                  "$ref": "#/components/schemas/Category",
                },
                "id": {
                  "example": 10,
                  "format": "int64",
                  "type": "integer",
                },
                "name": {
                  "example": "doggie",
                  "type": "string",
                },
                "photoUrls": {
                  "items": {
                    "type": "string",
                    "xml": {
                      "name": "photoUrl",
                    },
                  },
                  "type": "array",
                  "xml": {
                    "wrapped": true,
                  },
                },
                "status": {
                  "description": "pet status in the store",
                  "enum": [
                    "available",
                    "pending",
                    "sold",
                  ],
                  "type": "string",
                },
                "tags": {
                  "items": {
                    "$ref": "#/components/schemas/Tag",
                  },
                  "type": "array",
                  "xml": {
                    "wrapped": true,
                  },
                },
              },
              "required": [
                "name",
                "photoUrls",
              ],
              "type": "object",
              "xml": {
                "name": "pet",
              },
            },
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/Pet",
              "properties": {
                "category": {
                  "$ref": "#/components/schemas/Category",
                },
                "id": {
                  "example": 10,
                  "format": "int64",
                  "type": "integer",
                },
                "name": {
                  "example": "doggie",
                  "type": "string",
                },
                "photoUrls": {
                  "items": {
                    "type": "string",
                    "xml": {
                      "name": "photoUrl",
                    },
                  },
                  "type": "array",
                  "xml": {
                    "wrapped": true,
                  },
                },
                "status": {
                  "description": "pet status in the store",
                  "enum": [
                    "available",
                    "pending",
                    "sold",
                  ],
                  "type": "string",
                },
                "tags": {
                  "items": {
                    "$ref": "#/components/schemas/Tag",
                  },
                  "type": "array",
                  "xml": {
                    "wrapped": true,
                  },
                },
              },
              "required": [
                "name",
                "photoUrls",
              ],
              "type": "object",
              "xml": {
                "name": "pet",
              },
            },
          },
        },
        "description": "Pet object that needs to be added to the store",
      },
      "UserArray": {
        "content": {
          "application/json": {
            "schema": {
              "items": {
                "$ref": "#/components/schemas/User",
                "properties": {
                  "email": {
                    "example": "john@email.com",
                    "type": "string",
                  },
                  "firstName": {
                    "example": "John",
                    "type": "string",
                  },
                  "id": {
                    "example": 10,
                    "format": "int64",
                    "type": "integer",
                  },
                  "lastName": {
                    "example": "James",
                    "type": "string",
                  },
                  "password": {
                    "example": "12345",
                    "type": "string",
                  },
                  "phone": {
                    "example": "12345",
                    "type": "string",
                  },
                  "userStatus": {
                    "description": "User Status",
                    "example": 1,
                    "format": "int32",
                    "type": "integer",
                  },
                  "username": {
                    "example": "theUser",
                    "type": "string",
                  },
                },
                "type": "object",
                "xml": {
                  "name": "user",
                },
              },
              "type": "array",
            },
          },
        },
        "description": "List of user object",
      },
    },
    "responses": {},
    "schemas": {
      "Address": {
        "properties": {
          "city": {
            "example": "Palo Alto",
            "type": "string",
          },
          "state": {
            "example": "CA",
            "type": "string",
          },
          "street": {
            "example": "437 Lytton",
            "type": "string",
          },
          "zip": {
            "example": "94301",
            "type": "string",
          },
        },
        "type": "object",
        "xml": {
          "name": "address",
        },
      },
      "ApiResponse": {
        "properties": {
          "code": {
            "format": "int32",
            "type": "integer",
          },
          "message": {
            "type": "string",
          },
          "type": {
            "type": "string",
          },
        },
        "type": "object",
        "xml": {
          "name": "##default",
        },
      },
      "Category": {
        "properties": {
          "id": {
            "example": 1,
            "format": "int64",
            "type": "integer",
          },
          "name": {
            "example": "Dogs",
            "type": "string",
          },
        },
        "type": "object",
        "xml": {
          "name": "category",
        },
      },
      "Customer": {
        "properties": {
          "address": {
            "items": {
              "$ref": "#/components/schemas/Address",
              "properties": {
                "city": {
                  "example": "Palo Alto",
                  "type": "string",
                },
                "state": {
                  "example": "CA",
                  "type": "string",
                },
                "street": {
                  "example": "437 Lytton",
                  "type": "string",
                },
                "zip": {
                  "example": "94301",
                  "type": "string",
                },
              },
              "type": "object",
              "xml": {
                "name": "address",
              },
            },
            "type": "array",
            "xml": {
              "name": "addresses",
              "wrapped": true,
            },
          },
          "id": {
            "example": 100000,
            "format": "int64",
            "type": "integer",
          },
          "username": {
            "example": "fehguy",
            "type": "string",
          },
        },
        "type": "object",
        "xml": {
          "name": "customer",
        },
      },
      "Order": {
        "properties": {
          "complete": {
            "type": "boolean",
          },
          "id": {
            "example": 10,
            "format": "int64",
            "type": "integer",
          },
          "petId": {
            "example": 198772,
            "format": "int64",
            "type": "integer",
          },
          "quantity": {
            "example": 7,
            "format": "int32",
            "type": "integer",
          },
          "shipDate": {
            "format": "date-time",
            "type": "string",
          },
          "status": {
            "description": "Order Status",
            "enum": [
              "placed",
              "approved",
              "delivered",
            ],
            "example": "approved",
            "type": "string",
          },
        },
        "type": "object",
        "xml": {
          "name": "order",
        },
      },
      "Pet": {
        "properties": {
          "category": {
            "$ref": "#/components/schemas/Category",
            "properties": {
              "id": {
                "example": 1,
                "format": "int64",
                "type": "integer",
              },
              "name": {
                "example": "Dogs",
                "type": "string",
              },
            },
            "type": "object",
            "xml": {
              "name": "category",
            },
          },
          "id": {
            "example": 10,
            "format": "int64",
            "type": "integer",
          },
          "name": {
            "example": "doggie",
            "type": "string",
          },
          "photoUrls": {
            "items": {
              "type": "string",
              "xml": {
                "name": "photoUrl",
              },
            },
            "type": "array",
            "xml": {
              "wrapped": true,
            },
          },
          "status": {
            "description": "pet status in the store",
            "enum": [
              "available",
              "pending",
              "sold",
            ],
            "type": "string",
          },
          "tags": {
            "items": {
              "$ref": "#/components/schemas/Tag",
              "properties": {
                "id": {
                  "format": "int64",
                  "type": "integer",
                },
                "name": {
                  "type": "string",
                },
              },
              "type": "object",
              "xml": {
                "name": "tag",
              },
            },
            "type": "array",
            "xml": {
              "wrapped": true,
            },
          },
        },
        "required": [
          "name",
          "photoUrls",
        ],
        "type": "object",
        "xml": {
          "name": "pet",
        },
      },
      "Tag": {
        "properties": {
          "id": {
            "format": "int64",
            "type": "integer",
          },
          "name": {
            "type": "string",
          },
        },
        "type": "object",
        "xml": {
          "name": "tag",
        },
      },
      "User": {
        "properties": {
          "email": {
            "example": "john@email.com",
            "type": "string",
          },
          "firstName": {
            "example": "John",
            "type": "string",
          },
          "id": {
            "example": 10,
            "format": "int64",
            "type": "integer",
          },
          "lastName": {
            "example": "James",
            "type": "string",
          },
          "password": {
            "example": "12345",
            "type": "string",
          },
          "phone": {
            "example": "12345",
            "type": "string",
          },
          "userStatus": {
            "description": "User Status",
            "example": 1,
            "format": "int32",
            "type": "integer",
          },
          "username": {
            "example": "theUser",
            "type": "string",
          },
        },
        "type": "object",
        "xml": {
          "name": "user",
        },
      },
    },
  },
  "definitions": {},
  "paths": {
    "/pet": {
      "post": {
        "operationId": "addPet",
        "parameters": {
          "header": {
            "properties": {
              "Accept": {
                "enum": [
                  "application/xml",
                  "application/json",
                ],
                "type": "string",
              },
            },
          },
          "requestBody": {
            "$ref": "#/components/schemas/Pet",
            "properties": {
              "category": {
                "$ref": "#/components/schemas/Category",
              },
              "id": {
                "example": 10,
                "format": "int64",
                "type": "integer",
              },
              "name": {
                "example": "doggie",
                "type": "string",
              },
              "photoUrls": {
                "items": {
                  "type": "string",
                  "xml": {
                    "name": "photoUrl",
                  },
                },
                "type": "array",
                "xml": {
                  "wrapped": true,
                },
              },
              "status": {
                "description": "pet status in the store",
                "enum": [
                  "available",
                  "pending",
                  "sold",
                ],
                "type": "string",
              },
              "tags": {
                "items": {
                  "$ref": "#/components/schemas/Tag",
                },
                "type": "array",
                "xml": {
                  "wrapped": true,
                },
              },
            },
            "required": [
              "name",
              "photoUrls",
            ],
            "type": "object",
            "xml": {
              "name": "pet",
            },
          },
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "$ref": "#/components/schemas/Pet",
                "properties": {
                  "category": {
                    "$ref": "#/components/schemas/Category",
                  },
                  "id": {
                    "example": 10,
                    "format": "int64",
                    "type": "integer",
                  },
                  "name": {
                    "example": "doggie",
                    "type": "string",
                  },
                  "photoUrls": {
                    "items": {
                      "type": "string",
                      "xml": {
                        "name": "photoUrl",
                      },
                    },
                    "type": "array",
                    "xml": {
                      "wrapped": true,
                    },
                  },
                  "status": {
                    "description": "pet status in the store",
                    "enum": [
                      "available",
                      "pending",
                      "sold",
                    ],
                    "type": "string",
                  },
                  "tags": {
                    "items": {
                      "$ref": "#/components/schemas/Tag",
                    },
                    "type": "array",
                    "xml": {
                      "wrapped": true,
                    },
                  },
                },
                "required": [
                  "name",
                  "photoUrls",
                ],
                "type": "object",
                "xml": {
                  "name": "pet",
                },
              },
              "application/xml": {
                "$ref": "#/components/schemas/Pet",
                "properties": {
                  "category": {
                    "$ref": "#/components/schemas/Category",
                  },
                  "id": {
                    "example": 10,
                    "format": "int64",
                    "type": "integer",
                  },
                  "name": {
                    "example": "doggie",
                    "type": "string",
                  },
                  "photoUrls": {
                    "items": {
                      "type": "string",
                      "xml": {
                        "name": "photoUrl",
                      },
                    },
                    "type": "array",
                    "xml": {
                      "wrapped": true,
                    },
                  },
                  "status": {
                    "description": "pet status in the store",
                    "enum": [
                      "available",
                      "pending",
                      "sold",
                    ],
                    "type": "string",
                  },
                  "tags": {
                    "items": {
                      "$ref": "#/components/schemas/Tag",
                    },
                    "type": "array",
                    "xml": {
                      "wrapped": true,
                    },
                  },
                },
                "required": [
                  "name",
                  "photoUrls",
                ],
                "type": "object",
                "xml": {
                  "name": "pet",
                },
              },
            },
          },
          "405": {
            "content": {},
          },
        },
      },
      "put": {
        "operationId": "updatePet",
        "parameters": {
          "header": {
            "properties": {
              "Accept": {
                "enum": [
                  "application/xml",
                  "application/json",
                ],
                "type": "string",
              },
            },
          },
          "requestBody": {
            "$ref": "#/components/schemas/Pet",
            "properties": {
              "category": {
                "$ref": "#/components/schemas/Category",
              },
              "id": {
                "example": 10,
                "format": "int64",
                "type": "integer",
              },
              "name": {
                "example": "doggie",
                "type": "string",
              },
              "photoUrls": {
                "items": {
                  "type": "string",
                  "xml": {
                    "name": "photoUrl",
                  },
                },
                "type": "array",
                "xml": {
                  "wrapped": true,
                },
              },
              "status": {
                "description": "pet status in the store",
                "enum": [
                  "available",
                  "pending",
                  "sold",
                ],
                "type": "string",
              },
              "tags": {
                "items": {
                  "$ref": "#/components/schemas/Tag",
                },
                "type": "array",
                "xml": {
                  "wrapped": true,
                },
              },
            },
            "required": [
              "name",
              "photoUrls",
            ],
            "type": "object",
            "xml": {
              "name": "pet",
            },
          },
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "$ref": "#/components/schemas/Pet",
                "properties": {
                  "category": {
                    "$ref": "#/components/schemas/Category",
                  },
                  "id": {
                    "example": 10,
                    "format": "int64",
                    "type": "integer",
                  },
                  "name": {
                    "example": "doggie",
                    "type": "string",
                  },
                  "photoUrls": {
                    "items": {
                      "type": "string",
                      "xml": {
                        "name": "photoUrl",
                      },
                    },
                    "type": "array",
                    "xml": {
                      "wrapped": true,
                    },
                  },
                  "status": {
                    "description": "pet status in the store",
                    "enum": [
                      "available",
                      "pending",
                      "sold",
                    ],
                    "type": "string",
                  },
                  "tags": {
                    "items": {
                      "$ref": "#/components/schemas/Tag",
                    },
                    "type": "array",
                    "xml": {
                      "wrapped": true,
                    },
                  },
                },
                "required": [
                  "name",
                  "photoUrls",
                ],
                "type": "object",
                "xml": {
                  "name": "pet",
                },
              },
              "application/xml": {
                "$ref": "#/components/schemas/Pet",
                "properties": {
                  "category": {
                    "$ref": "#/components/schemas/Category",
                  },
                  "id": {
                    "example": 10,
                    "format": "int64",
                    "type": "integer",
                  },
                  "name": {
                    "example": "doggie",
                    "type": "string",
                  },
                  "photoUrls": {
                    "items": {
                      "type": "string",
                      "xml": {
                        "name": "photoUrl",
                      },
                    },
                    "type": "array",
                    "xml": {
                      "wrapped": true,
                    },
                  },
                  "status": {
                    "description": "pet status in the store",
                    "enum": [
                      "available",
                      "pending",
                      "sold",
                    ],
                    "type": "string",
                  },
                  "tags": {
                    "items": {
                      "$ref": "#/components/schemas/Tag",
                    },
                    "type": "array",
                    "xml": {
                      "wrapped": true,
                    },
                  },
                },
                "required": [
                  "name",
                  "photoUrls",
                ],
                "type": "object",
                "xml": {
                  "name": "pet",
                },
              },
            },
          },
          "400": {
            "content": {},
          },
          "404": {
            "content": {},
          },
          "405": {
            "content": {},
          },
        },
      },
    },
    "/pet/findByStatus": {
      "get": {
        "operationId": "findPetsByStatus",
        "parameters": {
          "header": {
            "properties": {
              "Accept": {
                "enum": [
                  "application/xml",
                  "application/json",
                ],
                "type": "string",
              },
            },
          },
          "query": {
            "properties": {
              "status": {
                "default": "available",
                "enum": [
                  "available",
                  "pending",
                  "sold",
                ],
                "type": "string",
              },
            },
            "required": [],
            "type": "object",
          },
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "items": {
                  "$ref": "#/components/schemas/Pet",
                  "properties": {
                    "category": {
                      "$ref": "#/components/schemas/Category",
                    },
                    "id": {
                      "example": 10,
                      "format": "int64",
                      "type": "integer",
                    },
                    "name": {
                      "example": "doggie",
                      "type": "string",
                    },
                    "photoUrls": {
                      "items": {
                        "type": "string",
                        "xml": {
                          "name": "photoUrl",
                        },
                      },
                      "type": "array",
                      "xml": {
                        "wrapped": true,
                      },
                    },
                    "status": {
                      "description": "pet status in the store",
                      "enum": [
                        "available",
                        "pending",
                        "sold",
                      ],
                      "type": "string",
                    },
                    "tags": {
                      "items": {
                        "$ref": "#/components/schemas/Tag",
                      },
                      "type": "array",
                      "xml": {
                        "wrapped": true,
                      },
                    },
                  },
                  "required": [
                    "name",
                    "photoUrls",
                  ],
                  "type": "object",
                  "xml": {
                    "name": "pet",
                  },
                },
                "type": "array",
              },
              "application/xml": {
                "items": {
                  "$ref": "#/components/schemas/Pet",
                  "properties": {
                    "category": {
                      "$ref": "#/components/schemas/Category",
                    },
                    "id": {
                      "example": 10,
                      "format": "int64",
                      "type": "integer",
                    },
                    "name": {
                      "example": "doggie",
                      "type": "string",
                    },
                    "photoUrls": {
                      "items": {
                        "type": "string",
                        "xml": {
                          "name": "photoUrl",
                        },
                      },
                      "type": "array",
                      "xml": {
                        "wrapped": true,
                      },
                    },
                    "status": {
                      "description": "pet status in the store",
                      "enum": [
                        "available",
                        "pending",
                        "sold",
                      ],
                      "type": "string",
                    },
                    "tags": {
                      "items": {
                        "$ref": "#/components/schemas/Tag",
                      },
                      "type": "array",
                      "xml": {
                        "wrapped": true,
                      },
                    },
                  },
                  "required": [
                    "name",
                    "photoUrls",
                  ],
                  "type": "object",
                  "xml": {
                    "name": "pet",
                  },
                },
                "type": "array",
              },
            },
          },
          "400": {
            "content": {},
          },
        },
      },
    },
    "/pet/findByTags": {
      "get": {
        "operationId": "findPetsByTags",
        "parameters": {
          "header": {
            "properties": {
              "Accept": {
                "enum": [
                  "application/xml",
                  "application/json",
                ],
                "type": "string",
              },
            },
          },
          "query": {
            "properties": {
              "tags": {
                "items": {
                  "type": "string",
                },
                "type": "array",
              },
            },
            "required": [],
            "type": "object",
          },
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "items": {
                  "$ref": "#/components/schemas/Pet",
                  "properties": {
                    "category": {
                      "$ref": "#/components/schemas/Category",
                    },
                    "id": {
                      "example": 10,
                      "format": "int64",
                      "type": "integer",
                    },
                    "name": {
                      "example": "doggie",
                      "type": "string",
                    },
                    "photoUrls": {
                      "items": {
                        "type": "string",
                        "xml": {
                          "name": "photoUrl",
                        },
                      },
                      "type": "array",
                      "xml": {
                        "wrapped": true,
                      },
                    },
                    "status": {
                      "description": "pet status in the store",
                      "enum": [
                        "available",
                        "pending",
                        "sold",
                      ],
                      "type": "string",
                    },
                    "tags": {
                      "items": {
                        "$ref": "#/components/schemas/Tag",
                      },
                      "type": "array",
                      "xml": {
                        "wrapped": true,
                      },
                    },
                  },
                  "required": [
                    "name",
                    "photoUrls",
                  ],
                  "type": "object",
                  "xml": {
                    "name": "pet",
                  },
                },
                "type": "array",
              },
              "application/xml": {
                "items": {
                  "$ref": "#/components/schemas/Pet",
                  "properties": {
                    "category": {
                      "$ref": "#/components/schemas/Category",
                    },
                    "id": {
                      "example": 10,
                      "format": "int64",
                      "type": "integer",
                    },
                    "name": {
                      "example": "doggie",
                      "type": "string",
                    },
                    "photoUrls": {
                      "items": {
                        "type": "string",
                        "xml": {
                          "name": "photoUrl",
                        },
                      },
                      "type": "array",
                      "xml": {
                        "wrapped": true,
                      },
                    },
                    "status": {
                      "description": "pet status in the store",
                      "enum": [
                        "available",
                        "pending",
                        "sold",
                      ],
                      "type": "string",
                    },
                    "tags": {
                      "items": {
                        "$ref": "#/components/schemas/Tag",
                      },
                      "type": "array",
                      "xml": {
                        "wrapped": true,
                      },
                    },
                  },
                  "required": [
                    "name",
                    "photoUrls",
                  ],
                  "type": "object",
                  "xml": {
                    "name": "pet",
                  },
                },
                "type": "array",
              },
            },
          },
          "400": {
            "content": {},
          },
        },
      },
    },
    "/pet/{petId}": {
      "delete": {
        "operationId": "deletePet",
        "parameters": {
          "header": {
            "properties": {
              "Accept": {
                "type": "string",
              },
              "api_key": {
                "type": "string",
              },
            },
            "required": [],
            "type": "object",
          },
          "path": {
            "properties": {
              "petId": {
                "format": "int64",
                "type": "integer",
              },
            },
            "required": [
              "petId",
            ],
            "type": "object",
          },
        },
        "responses": {
          "400": {
            "content": {},
          },
        },
      },
      "get": {
        "operationId": "getPetById",
        "parameters": {
          "header": {
            "properties": {
              "Accept": {
                "enum": [
                  "application/xml",
                  "application/json",
                ],
                "type": "string",
              },
              "api_key": {
                "type": "string",
              },
            },
            "required": [
              "api_key",
            ],
            "type": "object",
          },
          "path": {
            "properties": {
              "petId": {
                "format": "int64",
                "type": "integer",
              },
            },
            "required": [
              "petId",
            ],
            "type": "object",
          },
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "$ref": "#/components/schemas/Pet",
                "properties": {
                  "category": {
                    "$ref": "#/components/schemas/Category",
                  },
                  "id": {
                    "example": 10,
                    "format": "int64",
                    "type": "integer",
                  },
                  "name": {
                    "example": "doggie",
                    "type": "string",
                  },
                  "photoUrls": {
                    "items": {
                      "type": "string",
                      "xml": {
                        "name": "photoUrl",
                      },
                    },
                    "type": "array",
                    "xml": {
                      "wrapped": true,
                    },
                  },
                  "status": {
                    "description": "pet status in the store",
                    "enum": [
                      "available",
                      "pending",
                      "sold",
                    ],
                    "type": "string",
                  },
                  "tags": {
                    "items": {
                      "$ref": "#/components/schemas/Tag",
                    },
                    "type": "array",
                    "xml": {
                      "wrapped": true,
                    },
                  },
                },
                "required": [
                  "name",
                  "photoUrls",
                ],
                "type": "object",
                "xml": {
                  "name": "pet",
                },
              },
              "application/xml": {
                "$ref": "#/components/schemas/Pet",
                "properties": {
                  "category": {
                    "$ref": "#/components/schemas/Category",
                  },
                  "id": {
                    "example": 10,
                    "format": "int64",
                    "type": "integer",
                  },
                  "name": {
                    "example": "doggie",
                    "type": "string",
                  },
                  "photoUrls": {
                    "items": {
                      "type": "string",
                      "xml": {
                        "name": "photoUrl",
                      },
                    },
                    "type": "array",
                    "xml": {
                      "wrapped": true,
                    },
                  },
                  "status": {
                    "description": "pet status in the store",
                    "enum": [
                      "available",
                      "pending",
                      "sold",
                    ],
                    "type": "string",
                  },
                  "tags": {
                    "items": {
                      "$ref": "#/components/schemas/Tag",
                    },
                    "type": "array",
                    "xml": {
                      "wrapped": true,
                    },
                  },
                },
                "required": [
                  "name",
                  "photoUrls",
                ],
                "type": "object",
                "xml": {
                  "name": "pet",
                },
              },
            },
          },
          "400": {
            "content": {},
          },
          "404": {
            "content": {},
          },
        },
      },
      "post": {
        "operationId": "updatePetWithForm",
        "parameters": {
          "header": {
            "properties": {
              "Accept": {
                "type": "string",
              },
            },
          },
          "path": {
            "properties": {
              "petId": {
                "format": "int64",
                "type": "integer",
              },
            },
            "required": [
              "petId",
            ],
            "type": "object",
          },
          "query": {
            "properties": {
              "name": {
                "type": "string",
              },
              "status": {
                "type": "string",
              },
            },
            "required": [],
            "type": "object",
          },
        },
        "responses": {
          "405": {
            "content": {},
          },
        },
      },
    },
    "/pet/{petId}/uploadImage": {
      "post": {
        "operationId": "uploadFile",
        "parameters": {
          "header": {
            "properties": {
              "Accept": {
                "enum": "application/json",
                "type": "string",
              },
            },
          },
          "path": {
            "properties": {
              "petId": {
                "format": "int64",
                "type": "integer",
              },
            },
            "required": [
              "petId",
            ],
            "type": "object",
          },
          "query": {
            "properties": {
              "additionalMetadata": {
                "type": "string",
              },
            },
            "required": [],
            "type": "object",
          },
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "$ref": "#/components/schemas/ApiResponse",
                "properties": {
                  "code": {
                    "format": "int32",
                    "type": "integer",
                  },
                  "message": {
                    "type": "string",
                  },
                  "type": {
                    "type": "string",
                  },
                },
                "type": "object",
                "xml": {
                  "name": "##default",
                },
              },
            },
          },
        },
      },
    },
    "/store/inventory": {
      "get": {
        "operationId": "getInventory",
        "parameters": {
          "header": {
            "properties": {
              "Accept": {
                "enum": "application/json",
                "type": "string",
              },
              "api_key": {
                "type": "string",
              },
            },
            "required": [
              "api_key",
            ],
            "type": "object",
          },
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "additionalProperties": {
                  "format": "int32",
                  "type": "integer",
                },
                "type": "object",
              },
            },
          },
        },
      },
    },
    "/store/order": {
      "post": {
        "operationId": "placeOrder",
        "parameters": {
          "header": {
            "properties": {
              "Accept": {
                "enum": "application/json",
                "type": "string",
              },
            },
          },
          "requestBody": {
            "$ref": "#/components/schemas/Order",
            "properties": {
              "complete": {
                "type": "boolean",
              },
              "id": {
                "example": 10,
                "format": "int64",
                "type": "integer",
              },
              "petId": {
                "example": 198772,
                "format": "int64",
                "type": "integer",
              },
              "quantity": {
                "example": 7,
                "format": "int32",
                "type": "integer",
              },
              "shipDate": {
                "format": "date-time",
                "type": "string",
              },
              "status": {
                "description": "Order Status",
                "enum": [
                  "placed",
                  "approved",
                  "delivered",
                ],
                "example": "approved",
                "type": "string",
              },
            },
            "type": "object",
            "xml": {
              "name": "order",
            },
          },
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "$ref": "#/components/schemas/Order",
                "properties": {
                  "complete": {
                    "type": "boolean",
                  },
                  "id": {
                    "example": 10,
                    "format": "int64",
                    "type": "integer",
                  },
                  "petId": {
                    "example": 198772,
                    "format": "int64",
                    "type": "integer",
                  },
                  "quantity": {
                    "example": 7,
                    "format": "int32",
                    "type": "integer",
                  },
                  "shipDate": {
                    "format": "date-time",
                    "type": "string",
                  },
                  "status": {
                    "description": "Order Status",
                    "enum": [
                      "placed",
                      "approved",
                      "delivered",
                    ],
                    "example": "approved",
                    "type": "string",
                  },
                },
                "type": "object",
                "xml": {
                  "name": "order",
                },
              },
            },
          },
          "405": {
            "content": {},
          },
        },
      },
    },
    "/store/order/{orderId}": {
      "delete": {
        "operationId": "deleteOrder",
        "parameters": {
          "header": {
            "properties": {
              "Accept": {
                "type": "string",
              },
            },
          },
          "path": {
            "properties": {
              "orderId": {
                "format": "int64",
                "type": "integer",
              },
            },
            "required": [
              "orderId",
            ],
            "type": "object",
          },
        },
        "responses": {
          "400": {
            "content": {},
          },
          "404": {
            "content": {},
          },
        },
      },
      "get": {
        "operationId": "getOrderById",
        "parameters": {
          "header": {
            "properties": {
              "Accept": {
                "enum": [
                  "application/xml",
                  "application/json",
                ],
                "type": "string",
              },
            },
          },
          "path": {
            "properties": {
              "orderId": {
                "format": "int64",
                "type": "integer",
              },
            },
            "required": [
              "orderId",
            ],
            "type": "object",
          },
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "$ref": "#/components/schemas/Order",
                "properties": {
                  "complete": {
                    "type": "boolean",
                  },
                  "id": {
                    "example": 10,
                    "format": "int64",
                    "type": "integer",
                  },
                  "petId": {
                    "example": 198772,
                    "format": "int64",
                    "type": "integer",
                  },
                  "quantity": {
                    "example": 7,
                    "format": "int32",
                    "type": "integer",
                  },
                  "shipDate": {
                    "format": "date-time",
                    "type": "string",
                  },
                  "status": {
                    "description": "Order Status",
                    "enum": [
                      "placed",
                      "approved",
                      "delivered",
                    ],
                    "example": "approved",
                    "type": "string",
                  },
                },
                "type": "object",
                "xml": {
                  "name": "order",
                },
              },
              "application/xml": {
                "$ref": "#/components/schemas/Order",
                "properties": {
                  "complete": {
                    "type": "boolean",
                  },
                  "id": {
                    "example": 10,
                    "format": "int64",
                    "type": "integer",
                  },
                  "petId": {
                    "example": 198772,
                    "format": "int64",
                    "type": "integer",
                  },
                  "quantity": {
                    "example": 7,
                    "format": "int32",
                    "type": "integer",
                  },
                  "shipDate": {
                    "format": "date-time",
                    "type": "string",
                  },
                  "status": {
                    "description": "Order Status",
                    "enum": [
                      "placed",
                      "approved",
                      "delivered",
                    ],
                    "example": "approved",
                    "type": "string",
                  },
                },
                "type": "object",
                "xml": {
                  "name": "order",
                },
              },
            },
          },
          "400": {
            "content": {},
          },
          "404": {
            "content": {},
          },
        },
      },
    },
    "/user": {
      "post": {
        "operationId": "createUser",
        "parameters": {
          "header": {
            "properties": {
              "Accept": {
                "enum": [
                  "application/json",
                  "application/xml",
                ],
                "type": "string",
              },
            },
          },
          "requestBody": {
            "$ref": "#/components/schemas/User",
            "properties": {
              "email": {
                "example": "john@email.com",
                "type": "string",
              },
              "firstName": {
                "example": "John",
                "type": "string",
              },
              "id": {
                "example": 10,
                "format": "int64",
                "type": "integer",
              },
              "lastName": {
                "example": "James",
                "type": "string",
              },
              "password": {
                "example": "12345",
                "type": "string",
              },
              "phone": {
                "example": "12345",
                "type": "string",
              },
              "userStatus": {
                "description": "User Status",
                "example": 1,
                "format": "int32",
                "type": "integer",
              },
              "username": {
                "example": "theUser",
                "type": "string",
              },
            },
            "type": "object",
            "xml": {
              "name": "user",
            },
          },
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "$ref": "#/components/schemas/User",
                "properties": {
                  "email": {
                    "example": "john@email.com",
                    "type": "string",
                  },
                  "firstName": {
                    "example": "John",
                    "type": "string",
                  },
                  "id": {
                    "example": 10,
                    "format": "int64",
                    "type": "integer",
                  },
                  "lastName": {
                    "example": "James",
                    "type": "string",
                  },
                  "password": {
                    "example": "12345",
                    "type": "string",
                  },
                  "phone": {
                    "example": "12345",
                    "type": "string",
                  },
                  "userStatus": {
                    "description": "User Status",
                    "example": 1,
                    "format": "int32",
                    "type": "integer",
                  },
                  "username": {
                    "example": "theUser",
                    "type": "string",
                  },
                },
                "type": "object",
                "xml": {
                  "name": "user",
                },
              },
              "application/xml": {
                "$ref": "#/components/schemas/User",
                "properties": {
                  "email": {
                    "example": "john@email.com",
                    "type": "string",
                  },
                  "firstName": {
                    "example": "John",
                    "type": "string",
                  },
                  "id": {
                    "example": 10,
                    "format": "int64",
                    "type": "integer",
                  },
                  "lastName": {
                    "example": "James",
                    "type": "string",
                  },
                  "password": {
                    "example": "12345",
                    "type": "string",
                  },
                  "phone": {
                    "example": "12345",
                    "type": "string",
                  },
                  "userStatus": {
                    "description": "User Status",
                    "example": 1,
                    "format": "int32",
                    "type": "integer",
                  },
                  "username": {
                    "example": "theUser",
                    "type": "string",
                  },
                },
                "type": "object",
                "xml": {
                  "name": "user",
                },
              },
            },
          },
        },
      },
    },
    "/user/createWithList": {
      "post": {
        "operationId": "createUsersWithListInput",
        "parameters": {
          "header": {
            "properties": {
              "Accept": {
                "enum": [
                  "application/xml",
                  "application/json",
                ],
                "type": "string",
              },
            },
          },
          "requestBody": {
            "items": {
              "$ref": "#/components/schemas/User",
              "properties": {
                "email": {
                  "example": "john@email.com",
                  "type": "string",
                },
                "firstName": {
                  "example": "John",
                  "type": "string",
                },
                "id": {
                  "example": 10,
                  "format": "int64",
                  "type": "integer",
                },
                "lastName": {
                  "example": "James",
                  "type": "string",
                },
                "password": {
                  "example": "12345",
                  "type": "string",
                },
                "phone": {
                  "example": "12345",
                  "type": "string",
                },
                "userStatus": {
                  "description": "User Status",
                  "example": 1,
                  "format": "int32",
                  "type": "integer",
                },
                "username": {
                  "example": "theUser",
                  "type": "string",
                },
              },
              "type": "object",
              "xml": {
                "name": "user",
              },
            },
            "type": "array",
          },
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "$ref": "#/components/schemas/User",
                "properties": {
                  "email": {
                    "example": "john@email.com",
                    "type": "string",
                  },
                  "firstName": {
                    "example": "John",
                    "type": "string",
                  },
                  "id": {
                    "example": 10,
                    "format": "int64",
                    "type": "integer",
                  },
                  "lastName": {
                    "example": "James",
                    "type": "string",
                  },
                  "password": {
                    "example": "12345",
                    "type": "string",
                  },
                  "phone": {
                    "example": "12345",
                    "type": "string",
                  },
                  "userStatus": {
                    "description": "User Status",
                    "example": 1,
                    "format": "int32",
                    "type": "integer",
                  },
                  "username": {
                    "example": "theUser",
                    "type": "string",
                  },
                },
                "type": "object",
                "xml": {
                  "name": "user",
                },
              },
              "application/xml": {
                "$ref": "#/components/schemas/User",
                "properties": {
                  "email": {
                    "example": "john@email.com",
                    "type": "string",
                  },
                  "firstName": {
                    "example": "John",
                    "type": "string",
                  },
                  "id": {
                    "example": 10,
                    "format": "int64",
                    "type": "integer",
                  },
                  "lastName": {
                    "example": "James",
                    "type": "string",
                  },
                  "password": {
                    "example": "12345",
                    "type": "string",
                  },
                  "phone": {
                    "example": "12345",
                    "type": "string",
                  },
                  "userStatus": {
                    "description": "User Status",
                    "example": 1,
                    "format": "int32",
                    "type": "integer",
                  },
                  "username": {
                    "example": "theUser",
                    "type": "string",
                  },
                },
                "type": "object",
                "xml": {
                  "name": "user",
                },
              },
            },
          },
          "default": {
            "content": {},
          },
        },
      },
    },
    "/user/login": {
      "get": {
        "operationId": "loginUser",
        "parameters": {
          "header": {
            "properties": {
              "Accept": {
                "enum": [
                  "application/xml",
                  "application/json",
                ],
                "type": "string",
              },
            },
          },
          "query": {
            "properties": {
              "password": {
                "type": "string",
              },
              "username": {
                "type": "string",
              },
            },
            "required": [],
            "type": "object",
          },
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "type": "string",
              },
              "application/xml": {
                "type": "string",
              },
            },
            "headers": {
              "properties": {
                "X-Expires-After": {
                  "format": "date-time",
                  "type": "string",
                },
                "X-Rate-Limit": {
                  "format": "int32",
                  "type": "integer",
                },
              },
              "required": [],
              "type": "object",
            },
          },
          "400": {
            "content": {},
          },
        },
      },
    },
    "/user/logout": {
      "get": {
        "operationId": "logoutUser",
        "parameters": {
          "header": {
            "properties": {
              "Accept": {
                "type": "string",
              },
            },
          },
        },
        "responses": {
          "default": {
            "content": {},
          },
        },
      },
    },
    "/user/{username}": {
      "delete": {
        "operationId": "deleteUser",
        "parameters": {
          "header": {
            "properties": {
              "Accept": {
                "type": "string",
              },
            },
          },
          "path": {
            "properties": {
              "username": {
                "type": "string",
              },
            },
            "required": [
              "username",
            ],
            "type": "object",
          },
        },
        "responses": {
          "400": {
            "content": {},
          },
          "404": {
            "content": {},
          },
        },
      },
      "get": {
        "operationId": "getUserByName",
        "parameters": {
          "header": {
            "properties": {
              "Accept": {
                "enum": [
                  "application/xml",
                  "application/json",
                ],
                "type": "string",
              },
            },
          },
          "path": {
            "properties": {
              "username": {
                "type": "string",
              },
            },
            "required": [
              "username",
            ],
            "type": "object",
          },
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "$ref": "#/components/schemas/User",
                "properties": {
                  "email": {
                    "example": "john@email.com",
                    "type": "string",
                  },
                  "firstName": {
                    "example": "John",
                    "type": "string",
                  },
                  "id": {
                    "example": 10,
                    "format": "int64",
                    "type": "integer",
                  },
                  "lastName": {
                    "example": "James",
                    "type": "string",
                  },
                  "password": {
                    "example": "12345",
                    "type": "string",
                  },
                  "phone": {
                    "example": "12345",
                    "type": "string",
                  },
                  "userStatus": {
                    "description": "User Status",
                    "example": 1,
                    "format": "int32",
                    "type": "integer",
                  },
                  "username": {
                    "example": "theUser",
                    "type": "string",
                  },
                },
                "type": "object",
                "xml": {
                  "name": "user",
                },
              },
              "application/xml": {
                "$ref": "#/components/schemas/User",
                "properties": {
                  "email": {
                    "example": "john@email.com",
                    "type": "string",
                  },
                  "firstName": {
                    "example": "John",
                    "type": "string",
                  },
                  "id": {
                    "example": 10,
                    "format": "int64",
                    "type": "integer",
                  },
                  "lastName": {
                    "example": "James",
                    "type": "string",
                  },
                  "password": {
                    "example": "12345",
                    "type": "string",
                  },
                  "phone": {
                    "example": "12345",
                    "type": "string",
                  },
                  "userStatus": {
                    "description": "User Status",
                    "example": 1,
                    "format": "int32",
                    "type": "integer",
                  },
                  "username": {
                    "example": "theUser",
                    "type": "string",
                  },
                },
                "type": "object",
                "xml": {
                  "name": "user",
                },
              },
            },
          },
          "400": {
            "content": {},
          },
          "404": {
            "content": {},
          },
        },
      },
      "put": {
        "operationId": "updateUser",
        "parameters": {
          "header": {
            "properties": {
              "Accept": {
                "type": "string",
              },
            },
          },
          "path": {
            "properties": {
              "username": {
                "type": "string",
              },
            },
            "required": [
              "username",
            ],
            "type": "object",
          },
          "requestBody": {
            "$ref": "#/components/schemas/User",
            "properties": {
              "email": {
                "example": "john@email.com",
                "type": "string",
              },
              "firstName": {
                "example": "John",
                "type": "string",
              },
              "id": {
                "example": 10,
                "format": "int64",
                "type": "integer",
              },
              "lastName": {
                "example": "James",
                "type": "string",
              },
              "password": {
                "example": "12345",
                "type": "string",
              },
              "phone": {
                "example": "12345",
                "type": "string",
              },
              "userStatus": {
                "description": "User Status",
                "example": 1,
                "format": "int32",
                "type": "integer",
              },
              "username": {
                "example": "theUser",
                "type": "string",
              },
            },
            "type": "object",
            "xml": {
              "name": "user",
            },
          },
        },
        "responses": {
          "default": {
            "content": {},
          },
        },
      },
    },
  },
}
`;
