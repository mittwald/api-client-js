variables:
  IMAGE_TAG: $CI_REGISTRY_IMAGE/packages/react-api-hooks:$CI_COMMIT_TAG
  IMAGE_TAG_LATEST: $CI_REGISTRY_IMAGE/packages/react-api-hooks:latest
  IMAGE_TAG_STABLE: $CI_REGISTRY_IMAGE/packages/react-api-hooks:stable
  DOCKERFILE: ./packages/react-api-hooks/Dockerfile

.test:dockerbuild:
  image: docker
  tags:
    - dockermultistage
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - docker build -f "${DOCKERFILE}" --build-arg CI_JOB_TOKEN="${CI_JOB_TOKEN}" -t "${IMAGE_TAG_LATEST}" .
  except:
    - tags

.publish:latest:docker:
  image: docker
  tags:
    - dockermultistage
  before_script:
    - docker login -u gitlab-ci-token -p "${CI_JOB_TOKEN}" "${CI_REGISTRY}"
  script:
    - docker build -f "${DOCKERFILE}" --build-arg CI_JOB_TOKEN="${CI_JOB_TOKEN}" -t "${IMAGE_TAG_LATEST}" .
    - docker push "${IMAGE_TAG_LATEST}"
  only:
    - master
  except:
    # do this only for new commits. theoretically you can tag an older commit which should not trigger the latest tag
    - tags

.publish:stable:docker:
  tags:
    - dockermultistage
  image: docker
  before_script:
    - docker login -u gitlab-ci-token -p "${CI_JOB_TOKEN}" "${CI_REGISTRY}"
  script:
    - docker build -f "${DOCKERFILE}" --build-arg CI_JOB_TOKEN="${CI_JOB_TOKEN}" -t "${IMAGE_TAG_STABLE}" -t "${IMAGE_TAG}" .
    - docker push "${IMAGE_TAG_STABLE}"
    - docker push "${IMAGE_TAG}"
  rules:
    # do this only for regular semver tags (not alpha or beta)
    - if: '$CI_COMMIT_TAG != null && $CI_COMMIT_TAG =~ /^v[0-9]+(\.[0-9]+){2,3}$/'
      when: on_success

.publish:tag:docker:
  tags:
    - dockermultistage
  image: docker
  before_script:
    - docker login -u gitlab-ci-token -p "${CI_JOB_TOKEN}" "${CI_REGISTRY}"
  script:
    - docker build -f "${DOCKERFILE}" --build-arg CI_JOB_TOKEN="${CI_JOB_TOKEN}" -t "${IMAGE_TAG}" .
    - docker push "${IMAGE_TAG}"
  rules:
    # do this only for non regular semver tags (i.e. alpha or beta)
    - if: '$CI_COMMIT_TAG != null && $CI_COMMIT_TAG =~ /^v[0-9]+(\.[0-9]+){2,3}-.+$/'
      when: on_success

# backwards compatibility
.publish:dev:docker:
  extends: .publish:latest:docker
.publish:docker:
  extends: .publish:stable:docker
