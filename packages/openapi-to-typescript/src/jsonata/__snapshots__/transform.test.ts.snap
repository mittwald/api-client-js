// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`transformOpenAPIExpression.evaluate() creates correct snapshots for Pet Store example 1`] = `
Object {
  "components": Object {
    "parameters": Object {},
    "schemas": Object {
      "Address": Object {
        "properties": Object {
          "city": Object {
            "example": "Palo Alto",
            "type": "string",
          },
          "state": Object {
            "example": "CA",
            "type": "string",
          },
          "street": Object {
            "example": "437 Lytton",
            "type": "string",
          },
          "zip": Object {
            "example": "94301",
            "type": "string",
          },
        },
        "type": "object",
        "xml": Object {
          "name": "address",
        },
      },
      "ApiResponse": Object {
        "properties": Object {
          "code": Object {
            "format": "int32",
            "type": "integer",
          },
          "message": Object {
            "type": "string",
          },
          "type": Object {
            "type": "string",
          },
        },
        "type": "object",
        "xml": Object {
          "name": "##default",
        },
      },
      "Category": Object {
        "properties": Object {
          "id": Object {
            "example": 1,
            "format": "int64",
            "type": "integer",
          },
          "name": Object {
            "example": "Dogs",
            "type": "string",
          },
        },
        "type": "object",
        "xml": Object {
          "name": "category",
        },
      },
      "Customer": Object {
        "properties": Object {
          "address": Object {
            "items": Object {
              "$ref": "#/components/schemas/Address",
              "properties": Object {
                "city": Object {
                  "example": "Palo Alto",
                  "type": "string",
                },
                "state": Object {
                  "example": "CA",
                  "type": "string",
                },
                "street": Object {
                  "example": "437 Lytton",
                  "type": "string",
                },
                "zip": Object {
                  "example": "94301",
                  "type": "string",
                },
              },
              "type": "object",
              "xml": Object {
                "name": "address",
              },
            },
            "type": "array",
            "xml": Object {
              "name": "addresses",
              "wrapped": true,
            },
          },
          "id": Object {
            "example": 100000,
            "format": "int64",
            "type": "integer",
          },
          "username": Object {
            "example": "fehguy",
            "type": "string",
          },
        },
        "type": "object",
        "xml": Object {
          "name": "customer",
        },
      },
      "Order": Object {
        "properties": Object {
          "complete": Object {
            "type": "boolean",
          },
          "id": Object {
            "example": 10,
            "format": "int64",
            "type": "integer",
          },
          "petId": Object {
            "example": 198772,
            "format": "int64",
            "type": "integer",
          },
          "quantity": Object {
            "example": 7,
            "format": "int32",
            "type": "integer",
          },
          "shipDate": Object {
            "format": "date-time",
            "type": "string",
          },
          "status": Object {
            "description": "Order Status",
            "enum": Array [
              "placed",
              "approved",
              "delivered",
            ],
            "example": "approved",
            "type": "string",
          },
        },
        "type": "object",
        "xml": Object {
          "name": "order",
        },
      },
      "Pet": Object {
        "properties": Object {
          "category": Object {
            "$ref": "#/components/schemas/Category",
            "properties": Object {
              "id": Object {
                "example": 1,
                "format": "int64",
                "type": "integer",
              },
              "name": Object {
                "example": "Dogs",
                "type": "string",
              },
            },
            "type": "object",
            "xml": Object {
              "name": "category",
            },
          },
          "id": Object {
            "example": 10,
            "format": "int64",
            "type": "integer",
          },
          "name": Object {
            "example": "doggie",
            "type": "string",
          },
          "photoUrls": Object {
            "items": Object {
              "type": "string",
              "xml": Object {
                "name": "photoUrl",
              },
            },
            "type": "array",
            "xml": Object {
              "wrapped": true,
            },
          },
          "status": Object {
            "description": "pet status in the store",
            "enum": Array [
              "available",
              "pending",
              "sold",
            ],
            "type": "string",
          },
          "tags": Object {
            "items": Object {
              "$ref": "#/components/schemas/Tag",
              "properties": Object {
                "id": Object {
                  "format": "int64",
                  "type": "integer",
                },
                "name": Object {
                  "type": "string",
                },
              },
              "type": "object",
              "xml": Object {
                "name": "tag",
              },
            },
            "type": "array",
            "xml": Object {
              "wrapped": true,
            },
          },
        },
        "required": Array [
          "name",
          "photoUrls",
        ],
        "type": "object",
        "xml": Object {
          "name": "pet",
        },
      },
      "Tag": Object {
        "properties": Object {
          "id": Object {
            "format": "int64",
            "type": "integer",
          },
          "name": Object {
            "type": "string",
          },
        },
        "type": "object",
        "xml": Object {
          "name": "tag",
        },
      },
      "User": Object {
        "properties": Object {
          "email": Object {
            "example": "john@email.com",
            "type": "string",
          },
          "firstName": Object {
            "example": "John",
            "type": "string",
          },
          "id": Object {
            "example": 10,
            "format": "int64",
            "type": "integer",
          },
          "lastName": Object {
            "example": "James",
            "type": "string",
          },
          "password": Object {
            "example": "12345",
            "type": "string",
          },
          "phone": Object {
            "example": "12345",
            "type": "string",
          },
          "userStatus": Object {
            "description": "User Status",
            "example": 1,
            "format": "int32",
            "type": "integer",
          },
          "username": Object {
            "example": "theUser",
            "type": "string",
          },
        },
        "type": "object",
        "xml": Object {
          "name": "user",
        },
      },
    },
  },
  "definitions": Object {},
  "paths": Object {
    "/pet": Object {
      "post": Object {
        "operationId": "addPet",
        "parameters": Object {
          "header": Object {
            "properties": Object {
              "Accept": Object {
                "enum": Array [
                  "application/xml",
                  "application/json",
                ],
                "type": "string",
              },
            },
          },
          "requestBody": Object {
            "$ref": "#/components/schemas/Pet",
            "properties": Object {
              "category": Object {
                "$ref": "#/components/schemas/Category",
              },
              "id": Object {
                "example": 10,
                "format": "int64",
                "type": "integer",
              },
              "name": Object {
                "example": "doggie",
                "type": "string",
              },
              "photoUrls": Object {
                "items": Object {
                  "type": "string",
                  "xml": Object {
                    "name": "photoUrl",
                  },
                },
                "type": "array",
                "xml": Object {
                  "wrapped": true,
                },
              },
              "status": Object {
                "description": "pet status in the store",
                "enum": Array [
                  "available",
                  "pending",
                  "sold",
                ],
                "type": "string",
              },
              "tags": Object {
                "items": Object {
                  "$ref": "#/components/schemas/Tag",
                },
                "type": "array",
                "xml": Object {
                  "wrapped": true,
                },
              },
            },
            "required": Array [
              "name",
              "photoUrls",
            ],
            "type": "object",
            "xml": Object {
              "name": "pet",
            },
          },
        },
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "$ref": "#/components/schemas/Pet",
                "properties": Object {
                  "category": Object {
                    "$ref": "#/components/schemas/Category",
                  },
                  "id": Object {
                    "example": 10,
                    "format": "int64",
                    "type": "integer",
                  },
                  "name": Object {
                    "example": "doggie",
                    "type": "string",
                  },
                  "photoUrls": Object {
                    "items": Object {
                      "type": "string",
                      "xml": Object {
                        "name": "photoUrl",
                      },
                    },
                    "type": "array",
                    "xml": Object {
                      "wrapped": true,
                    },
                  },
                  "status": Object {
                    "description": "pet status in the store",
                    "enum": Array [
                      "available",
                      "pending",
                      "sold",
                    ],
                    "type": "string",
                  },
                  "tags": Object {
                    "items": Object {
                      "$ref": "#/components/schemas/Tag",
                    },
                    "type": "array",
                    "xml": Object {
                      "wrapped": true,
                    },
                  },
                },
                "required": Array [
                  "name",
                  "photoUrls",
                ],
                "type": "object",
                "xml": Object {
                  "name": "pet",
                },
              },
              "application/xml": Object {
                "$ref": "#/components/schemas/Pet",
                "properties": Object {
                  "category": Object {
                    "$ref": "#/components/schemas/Category",
                  },
                  "id": Object {
                    "example": 10,
                    "format": "int64",
                    "type": "integer",
                  },
                  "name": Object {
                    "example": "doggie",
                    "type": "string",
                  },
                  "photoUrls": Object {
                    "items": Object {
                      "type": "string",
                      "xml": Object {
                        "name": "photoUrl",
                      },
                    },
                    "type": "array",
                    "xml": Object {
                      "wrapped": true,
                    },
                  },
                  "status": Object {
                    "description": "pet status in the store",
                    "enum": Array [
                      "available",
                      "pending",
                      "sold",
                    ],
                    "type": "string",
                  },
                  "tags": Object {
                    "items": Object {
                      "$ref": "#/components/schemas/Tag",
                    },
                    "type": "array",
                    "xml": Object {
                      "wrapped": true,
                    },
                  },
                },
                "required": Array [
                  "name",
                  "photoUrls",
                ],
                "type": "object",
                "xml": Object {
                  "name": "pet",
                },
              },
            },
          },
          "405": Object {
            "content": Object {},
          },
        },
      },
      "put": Object {
        "operationId": "updatePet",
        "parameters": Object {
          "header": Object {
            "properties": Object {
              "Accept": Object {
                "enum": Array [
                  "application/xml",
                  "application/json",
                ],
                "type": "string",
              },
            },
          },
          "requestBody": Object {
            "$ref": "#/components/schemas/Pet",
            "properties": Object {
              "category": Object {
                "$ref": "#/components/schemas/Category",
              },
              "id": Object {
                "example": 10,
                "format": "int64",
                "type": "integer",
              },
              "name": Object {
                "example": "doggie",
                "type": "string",
              },
              "photoUrls": Object {
                "items": Object {
                  "type": "string",
                  "xml": Object {
                    "name": "photoUrl",
                  },
                },
                "type": "array",
                "xml": Object {
                  "wrapped": true,
                },
              },
              "status": Object {
                "description": "pet status in the store",
                "enum": Array [
                  "available",
                  "pending",
                  "sold",
                ],
                "type": "string",
              },
              "tags": Object {
                "items": Object {
                  "$ref": "#/components/schemas/Tag",
                },
                "type": "array",
                "xml": Object {
                  "wrapped": true,
                },
              },
            },
            "required": Array [
              "name",
              "photoUrls",
            ],
            "type": "object",
            "xml": Object {
              "name": "pet",
            },
          },
        },
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "$ref": "#/components/schemas/Pet",
                "properties": Object {
                  "category": Object {
                    "$ref": "#/components/schemas/Category",
                  },
                  "id": Object {
                    "example": 10,
                    "format": "int64",
                    "type": "integer",
                  },
                  "name": Object {
                    "example": "doggie",
                    "type": "string",
                  },
                  "photoUrls": Object {
                    "items": Object {
                      "type": "string",
                      "xml": Object {
                        "name": "photoUrl",
                      },
                    },
                    "type": "array",
                    "xml": Object {
                      "wrapped": true,
                    },
                  },
                  "status": Object {
                    "description": "pet status in the store",
                    "enum": Array [
                      "available",
                      "pending",
                      "sold",
                    ],
                    "type": "string",
                  },
                  "tags": Object {
                    "items": Object {
                      "$ref": "#/components/schemas/Tag",
                    },
                    "type": "array",
                    "xml": Object {
                      "wrapped": true,
                    },
                  },
                },
                "required": Array [
                  "name",
                  "photoUrls",
                ],
                "type": "object",
                "xml": Object {
                  "name": "pet",
                },
              },
              "application/xml": Object {
                "$ref": "#/components/schemas/Pet",
                "properties": Object {
                  "category": Object {
                    "$ref": "#/components/schemas/Category",
                  },
                  "id": Object {
                    "example": 10,
                    "format": "int64",
                    "type": "integer",
                  },
                  "name": Object {
                    "example": "doggie",
                    "type": "string",
                  },
                  "photoUrls": Object {
                    "items": Object {
                      "type": "string",
                      "xml": Object {
                        "name": "photoUrl",
                      },
                    },
                    "type": "array",
                    "xml": Object {
                      "wrapped": true,
                    },
                  },
                  "status": Object {
                    "description": "pet status in the store",
                    "enum": Array [
                      "available",
                      "pending",
                      "sold",
                    ],
                    "type": "string",
                  },
                  "tags": Object {
                    "items": Object {
                      "$ref": "#/components/schemas/Tag",
                    },
                    "type": "array",
                    "xml": Object {
                      "wrapped": true,
                    },
                  },
                },
                "required": Array [
                  "name",
                  "photoUrls",
                ],
                "type": "object",
                "xml": Object {
                  "name": "pet",
                },
              },
            },
          },
          "400": Object {
            "content": Object {},
          },
          "404": Object {
            "content": Object {},
          },
          "405": Object {
            "content": Object {},
          },
        },
      },
    },
    "/pet/findByStatus": Object {
      "get": Object {
        "operationId": "findPetsByStatus",
        "parameters": Object {
          "header": Object {
            "properties": Object {
              "Accept": Object {
                "enum": Array [
                  "application/xml",
                  "application/json",
                ],
                "type": "string",
              },
            },
          },
          "query": Object {
            "properties": Object {
              "status": Object {
                "default": "available",
                "enum": Array [
                  "available",
                  "pending",
                  "sold",
                ],
                "type": "string",
              },
            },
            "required": Array [],
            "type": "object",
          },
        },
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "items": Object {
                  "$ref": "#/components/schemas/Pet",
                  "properties": Object {
                    "category": Object {
                      "$ref": "#/components/schemas/Category",
                    },
                    "id": Object {
                      "example": 10,
                      "format": "int64",
                      "type": "integer",
                    },
                    "name": Object {
                      "example": "doggie",
                      "type": "string",
                    },
                    "photoUrls": Object {
                      "items": Object {
                        "type": "string",
                        "xml": Object {
                          "name": "photoUrl",
                        },
                      },
                      "type": "array",
                      "xml": Object {
                        "wrapped": true,
                      },
                    },
                    "status": Object {
                      "description": "pet status in the store",
                      "enum": Array [
                        "available",
                        "pending",
                        "sold",
                      ],
                      "type": "string",
                    },
                    "tags": Object {
                      "items": Object {
                        "$ref": "#/components/schemas/Tag",
                      },
                      "type": "array",
                      "xml": Object {
                        "wrapped": true,
                      },
                    },
                  },
                  "required": Array [
                    "name",
                    "photoUrls",
                  ],
                  "type": "object",
                  "xml": Object {
                    "name": "pet",
                  },
                },
                "type": "array",
              },
              "application/xml": Object {
                "items": Object {
                  "$ref": "#/components/schemas/Pet",
                  "properties": Object {
                    "category": Object {
                      "$ref": "#/components/schemas/Category",
                    },
                    "id": Object {
                      "example": 10,
                      "format": "int64",
                      "type": "integer",
                    },
                    "name": Object {
                      "example": "doggie",
                      "type": "string",
                    },
                    "photoUrls": Object {
                      "items": Object {
                        "type": "string",
                        "xml": Object {
                          "name": "photoUrl",
                        },
                      },
                      "type": "array",
                      "xml": Object {
                        "wrapped": true,
                      },
                    },
                    "status": Object {
                      "description": "pet status in the store",
                      "enum": Array [
                        "available",
                        "pending",
                        "sold",
                      ],
                      "type": "string",
                    },
                    "tags": Object {
                      "items": Object {
                        "$ref": "#/components/schemas/Tag",
                      },
                      "type": "array",
                      "xml": Object {
                        "wrapped": true,
                      },
                    },
                  },
                  "required": Array [
                    "name",
                    "photoUrls",
                  ],
                  "type": "object",
                  "xml": Object {
                    "name": "pet",
                  },
                },
                "type": "array",
              },
            },
          },
          "400": Object {
            "content": Object {},
          },
        },
      },
    },
    "/pet/findByTags": Object {
      "get": Object {
        "operationId": "findPetsByTags",
        "parameters": Object {
          "header": Object {
            "properties": Object {
              "Accept": Object {
                "enum": Array [
                  "application/xml",
                  "application/json",
                ],
                "type": "string",
              },
            },
          },
          "query": Object {
            "properties": Object {
              "tags": Object {
                "items": Object {
                  "type": "string",
                },
                "type": "array",
              },
            },
            "required": Array [],
            "type": "object",
          },
        },
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "items": Object {
                  "$ref": "#/components/schemas/Pet",
                  "properties": Object {
                    "category": Object {
                      "$ref": "#/components/schemas/Category",
                    },
                    "id": Object {
                      "example": 10,
                      "format": "int64",
                      "type": "integer",
                    },
                    "name": Object {
                      "example": "doggie",
                      "type": "string",
                    },
                    "photoUrls": Object {
                      "items": Object {
                        "type": "string",
                        "xml": Object {
                          "name": "photoUrl",
                        },
                      },
                      "type": "array",
                      "xml": Object {
                        "wrapped": true,
                      },
                    },
                    "status": Object {
                      "description": "pet status in the store",
                      "enum": Array [
                        "available",
                        "pending",
                        "sold",
                      ],
                      "type": "string",
                    },
                    "tags": Object {
                      "items": Object {
                        "$ref": "#/components/schemas/Tag",
                      },
                      "type": "array",
                      "xml": Object {
                        "wrapped": true,
                      },
                    },
                  },
                  "required": Array [
                    "name",
                    "photoUrls",
                  ],
                  "type": "object",
                  "xml": Object {
                    "name": "pet",
                  },
                },
                "type": "array",
              },
              "application/xml": Object {
                "items": Object {
                  "$ref": "#/components/schemas/Pet",
                  "properties": Object {
                    "category": Object {
                      "$ref": "#/components/schemas/Category",
                    },
                    "id": Object {
                      "example": 10,
                      "format": "int64",
                      "type": "integer",
                    },
                    "name": Object {
                      "example": "doggie",
                      "type": "string",
                    },
                    "photoUrls": Object {
                      "items": Object {
                        "type": "string",
                        "xml": Object {
                          "name": "photoUrl",
                        },
                      },
                      "type": "array",
                      "xml": Object {
                        "wrapped": true,
                      },
                    },
                    "status": Object {
                      "description": "pet status in the store",
                      "enum": Array [
                        "available",
                        "pending",
                        "sold",
                      ],
                      "type": "string",
                    },
                    "tags": Object {
                      "items": Object {
                        "$ref": "#/components/schemas/Tag",
                      },
                      "type": "array",
                      "xml": Object {
                        "wrapped": true,
                      },
                    },
                  },
                  "required": Array [
                    "name",
                    "photoUrls",
                  ],
                  "type": "object",
                  "xml": Object {
                    "name": "pet",
                  },
                },
                "type": "array",
              },
            },
          },
          "400": Object {
            "content": Object {},
          },
        },
      },
    },
    "/pet/{petId}": Object {
      "delete": Object {
        "operationId": "deletePet",
        "parameters": Object {
          "header": Object {
            "properties": Object {
              "Accept": Object {
                "type": "string",
              },
              "api_key": Object {
                "type": "string",
              },
            },
            "required": Array [],
            "type": "object",
          },
          "path": Object {
            "properties": Object {
              "petId": Object {
                "format": "int64",
                "type": "integer",
              },
            },
            "required": Array [
              "petId",
            ],
            "type": "object",
          },
        },
        "responses": Object {
          "400": Object {
            "content": Object {},
          },
        },
      },
      "get": Object {
        "operationId": "getPetById",
        "parameters": Object {
          "header": Object {
            "properties": Object {
              "Accept": Object {
                "enum": Array [
                  "application/xml",
                  "application/json",
                ],
                "type": "string",
              },
              "api_key": Object {
                "type": "string",
              },
            },
            "required": Array [
              "api_key",
            ],
            "type": "object",
          },
          "path": Object {
            "properties": Object {
              "petId": Object {
                "format": "int64",
                "type": "integer",
              },
            },
            "required": Array [
              "petId",
            ],
            "type": "object",
          },
        },
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "$ref": "#/components/schemas/Pet",
                "properties": Object {
                  "category": Object {
                    "$ref": "#/components/schemas/Category",
                  },
                  "id": Object {
                    "example": 10,
                    "format": "int64",
                    "type": "integer",
                  },
                  "name": Object {
                    "example": "doggie",
                    "type": "string",
                  },
                  "photoUrls": Object {
                    "items": Object {
                      "type": "string",
                      "xml": Object {
                        "name": "photoUrl",
                      },
                    },
                    "type": "array",
                    "xml": Object {
                      "wrapped": true,
                    },
                  },
                  "status": Object {
                    "description": "pet status in the store",
                    "enum": Array [
                      "available",
                      "pending",
                      "sold",
                    ],
                    "type": "string",
                  },
                  "tags": Object {
                    "items": Object {
                      "$ref": "#/components/schemas/Tag",
                    },
                    "type": "array",
                    "xml": Object {
                      "wrapped": true,
                    },
                  },
                },
                "required": Array [
                  "name",
                  "photoUrls",
                ],
                "type": "object",
                "xml": Object {
                  "name": "pet",
                },
              },
              "application/xml": Object {
                "$ref": "#/components/schemas/Pet",
                "properties": Object {
                  "category": Object {
                    "$ref": "#/components/schemas/Category",
                  },
                  "id": Object {
                    "example": 10,
                    "format": "int64",
                    "type": "integer",
                  },
                  "name": Object {
                    "example": "doggie",
                    "type": "string",
                  },
                  "photoUrls": Object {
                    "items": Object {
                      "type": "string",
                      "xml": Object {
                        "name": "photoUrl",
                      },
                    },
                    "type": "array",
                    "xml": Object {
                      "wrapped": true,
                    },
                  },
                  "status": Object {
                    "description": "pet status in the store",
                    "enum": Array [
                      "available",
                      "pending",
                      "sold",
                    ],
                    "type": "string",
                  },
                  "tags": Object {
                    "items": Object {
                      "$ref": "#/components/schemas/Tag",
                    },
                    "type": "array",
                    "xml": Object {
                      "wrapped": true,
                    },
                  },
                },
                "required": Array [
                  "name",
                  "photoUrls",
                ],
                "type": "object",
                "xml": Object {
                  "name": "pet",
                },
              },
            },
          },
          "400": Object {
            "content": Object {},
          },
          "404": Object {
            "content": Object {},
          },
        },
      },
      "post": Object {
        "operationId": "updatePetWithForm",
        "parameters": Object {
          "header": Object {
            "properties": Object {
              "Accept": Object {
                "type": "string",
              },
            },
          },
          "path": Object {
            "properties": Object {
              "petId": Object {
                "format": "int64",
                "type": "integer",
              },
            },
            "required": Array [
              "petId",
            ],
            "type": "object",
          },
          "query": Object {
            "properties": Object {
              "name": Object {
                "type": "string",
              },
              "status": Object {
                "type": "string",
              },
            },
            "required": Array [],
            "type": "object",
          },
        },
        "responses": Object {
          "405": Object {
            "content": Object {},
          },
        },
      },
    },
    "/pet/{petId}/uploadImage": Object {
      "post": Object {
        "operationId": "uploadFile",
        "parameters": Object {
          "header": Object {
            "properties": Object {
              "Accept": Object {
                "enum": "application/json",
                "type": "string",
              },
            },
          },
          "path": Object {
            "properties": Object {
              "petId": Object {
                "format": "int64",
                "type": "integer",
              },
            },
            "required": Array [
              "petId",
            ],
            "type": "object",
          },
          "query": Object {
            "properties": Object {
              "additionalMetadata": Object {
                "type": "string",
              },
            },
            "required": Array [],
            "type": "object",
          },
        },
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "$ref": "#/components/schemas/ApiResponse",
                "properties": Object {
                  "code": Object {
                    "format": "int32",
                    "type": "integer",
                  },
                  "message": Object {
                    "type": "string",
                  },
                  "type": Object {
                    "type": "string",
                  },
                },
                "type": "object",
                "xml": Object {
                  "name": "##default",
                },
              },
            },
          },
        },
      },
    },
    "/store/inventory": Object {
      "get": Object {
        "operationId": "getInventory",
        "parameters": Object {
          "header": Object {
            "properties": Object {
              "Accept": Object {
                "enum": "application/json",
                "type": "string",
              },
              "api_key": Object {
                "type": "string",
              },
            },
            "required": Array [
              "api_key",
            ],
            "type": "object",
          },
        },
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "additionalProperties": Object {
                  "format": "int32",
                  "type": "integer",
                },
                "type": "object",
              },
            },
          },
        },
      },
    },
    "/store/order": Object {
      "post": Object {
        "operationId": "placeOrder",
        "parameters": Object {
          "header": Object {
            "properties": Object {
              "Accept": Object {
                "enum": "application/json",
                "type": "string",
              },
            },
          },
          "requestBody": Object {
            "$ref": "#/components/schemas/Order",
            "properties": Object {
              "complete": Object {
                "type": "boolean",
              },
              "id": Object {
                "example": 10,
                "format": "int64",
                "type": "integer",
              },
              "petId": Object {
                "example": 198772,
                "format": "int64",
                "type": "integer",
              },
              "quantity": Object {
                "example": 7,
                "format": "int32",
                "type": "integer",
              },
              "shipDate": Object {
                "format": "date-time",
                "type": "string",
              },
              "status": Object {
                "description": "Order Status",
                "enum": Array [
                  "placed",
                  "approved",
                  "delivered",
                ],
                "example": "approved",
                "type": "string",
              },
            },
            "type": "object",
            "xml": Object {
              "name": "order",
            },
          },
        },
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "$ref": "#/components/schemas/Order",
                "properties": Object {
                  "complete": Object {
                    "type": "boolean",
                  },
                  "id": Object {
                    "example": 10,
                    "format": "int64",
                    "type": "integer",
                  },
                  "petId": Object {
                    "example": 198772,
                    "format": "int64",
                    "type": "integer",
                  },
                  "quantity": Object {
                    "example": 7,
                    "format": "int32",
                    "type": "integer",
                  },
                  "shipDate": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                  "status": Object {
                    "description": "Order Status",
                    "enum": Array [
                      "placed",
                      "approved",
                      "delivered",
                    ],
                    "example": "approved",
                    "type": "string",
                  },
                },
                "type": "object",
                "xml": Object {
                  "name": "order",
                },
              },
            },
          },
          "405": Object {
            "content": Object {},
          },
        },
      },
    },
    "/store/order/{orderId}": Object {
      "delete": Object {
        "operationId": "deleteOrder",
        "parameters": Object {
          "header": Object {
            "properties": Object {
              "Accept": Object {
                "type": "string",
              },
            },
          },
          "path": Object {
            "properties": Object {
              "orderId": Object {
                "format": "int64",
                "type": "integer",
              },
            },
            "required": Array [
              "orderId",
            ],
            "type": "object",
          },
        },
        "responses": Object {
          "400": Object {
            "content": Object {},
          },
          "404": Object {
            "content": Object {},
          },
        },
      },
      "get": Object {
        "operationId": "getOrderById",
        "parameters": Object {
          "header": Object {
            "properties": Object {
              "Accept": Object {
                "enum": Array [
                  "application/xml",
                  "application/json",
                ],
                "type": "string",
              },
            },
          },
          "path": Object {
            "properties": Object {
              "orderId": Object {
                "format": "int64",
                "type": "integer",
              },
            },
            "required": Array [
              "orderId",
            ],
            "type": "object",
          },
        },
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "$ref": "#/components/schemas/Order",
                "properties": Object {
                  "complete": Object {
                    "type": "boolean",
                  },
                  "id": Object {
                    "example": 10,
                    "format": "int64",
                    "type": "integer",
                  },
                  "petId": Object {
                    "example": 198772,
                    "format": "int64",
                    "type": "integer",
                  },
                  "quantity": Object {
                    "example": 7,
                    "format": "int32",
                    "type": "integer",
                  },
                  "shipDate": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                  "status": Object {
                    "description": "Order Status",
                    "enum": Array [
                      "placed",
                      "approved",
                      "delivered",
                    ],
                    "example": "approved",
                    "type": "string",
                  },
                },
                "type": "object",
                "xml": Object {
                  "name": "order",
                },
              },
              "application/xml": Object {
                "$ref": "#/components/schemas/Order",
                "properties": Object {
                  "complete": Object {
                    "type": "boolean",
                  },
                  "id": Object {
                    "example": 10,
                    "format": "int64",
                    "type": "integer",
                  },
                  "petId": Object {
                    "example": 198772,
                    "format": "int64",
                    "type": "integer",
                  },
                  "quantity": Object {
                    "example": 7,
                    "format": "int32",
                    "type": "integer",
                  },
                  "shipDate": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                  "status": Object {
                    "description": "Order Status",
                    "enum": Array [
                      "placed",
                      "approved",
                      "delivered",
                    ],
                    "example": "approved",
                    "type": "string",
                  },
                },
                "type": "object",
                "xml": Object {
                  "name": "order",
                },
              },
            },
          },
          "400": Object {
            "content": Object {},
          },
          "404": Object {
            "content": Object {},
          },
        },
      },
    },
    "/user": Object {
      "post": Object {
        "operationId": "createUser",
        "parameters": Object {
          "header": Object {
            "properties": Object {
              "Accept": Object {
                "enum": Array [
                  "application/json",
                  "application/xml",
                ],
                "type": "string",
              },
            },
          },
          "requestBody": Object {
            "$ref": "#/components/schemas/User",
            "properties": Object {
              "email": Object {
                "example": "john@email.com",
                "type": "string",
              },
              "firstName": Object {
                "example": "John",
                "type": "string",
              },
              "id": Object {
                "example": 10,
                "format": "int64",
                "type": "integer",
              },
              "lastName": Object {
                "example": "James",
                "type": "string",
              },
              "password": Object {
                "example": "12345",
                "type": "string",
              },
              "phone": Object {
                "example": "12345",
                "type": "string",
              },
              "userStatus": Object {
                "description": "User Status",
                "example": 1,
                "format": "int32",
                "type": "integer",
              },
              "username": Object {
                "example": "theUser",
                "type": "string",
              },
            },
            "type": "object",
            "xml": Object {
              "name": "user",
            },
          },
        },
        "responses": Object {
          "default": Object {
            "content": Object {
              "application/json": Object {
                "$ref": "#/components/schemas/User",
                "properties": Object {
                  "email": Object {
                    "example": "john@email.com",
                    "type": "string",
                  },
                  "firstName": Object {
                    "example": "John",
                    "type": "string",
                  },
                  "id": Object {
                    "example": 10,
                    "format": "int64",
                    "type": "integer",
                  },
                  "lastName": Object {
                    "example": "James",
                    "type": "string",
                  },
                  "password": Object {
                    "example": "12345",
                    "type": "string",
                  },
                  "phone": Object {
                    "example": "12345",
                    "type": "string",
                  },
                  "userStatus": Object {
                    "description": "User Status",
                    "example": 1,
                    "format": "int32",
                    "type": "integer",
                  },
                  "username": Object {
                    "example": "theUser",
                    "type": "string",
                  },
                },
                "type": "object",
                "xml": Object {
                  "name": "user",
                },
              },
              "application/xml": Object {
                "$ref": "#/components/schemas/User",
                "properties": Object {
                  "email": Object {
                    "example": "john@email.com",
                    "type": "string",
                  },
                  "firstName": Object {
                    "example": "John",
                    "type": "string",
                  },
                  "id": Object {
                    "example": 10,
                    "format": "int64",
                    "type": "integer",
                  },
                  "lastName": Object {
                    "example": "James",
                    "type": "string",
                  },
                  "password": Object {
                    "example": "12345",
                    "type": "string",
                  },
                  "phone": Object {
                    "example": "12345",
                    "type": "string",
                  },
                  "userStatus": Object {
                    "description": "User Status",
                    "example": 1,
                    "format": "int32",
                    "type": "integer",
                  },
                  "username": Object {
                    "example": "theUser",
                    "type": "string",
                  },
                },
                "type": "object",
                "xml": Object {
                  "name": "user",
                },
              },
            },
          },
        },
      },
    },
    "/user/createWithList": Object {
      "post": Object {
        "operationId": "createUsersWithListInput",
        "parameters": Object {
          "header": Object {
            "properties": Object {
              "Accept": Object {
                "enum": Array [
                  "application/xml",
                  "application/json",
                ],
                "type": "string",
              },
            },
          },
          "requestBody": Object {
            "items": Object {
              "$ref": "#/components/schemas/User",
              "properties": Object {
                "email": Object {
                  "example": "john@email.com",
                  "type": "string",
                },
                "firstName": Object {
                  "example": "John",
                  "type": "string",
                },
                "id": Object {
                  "example": 10,
                  "format": "int64",
                  "type": "integer",
                },
                "lastName": Object {
                  "example": "James",
                  "type": "string",
                },
                "password": Object {
                  "example": "12345",
                  "type": "string",
                },
                "phone": Object {
                  "example": "12345",
                  "type": "string",
                },
                "userStatus": Object {
                  "description": "User Status",
                  "example": 1,
                  "format": "int32",
                  "type": "integer",
                },
                "username": Object {
                  "example": "theUser",
                  "type": "string",
                },
              },
              "type": "object",
              "xml": Object {
                "name": "user",
              },
            },
            "type": "array",
          },
        },
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "$ref": "#/components/schemas/User",
                "properties": Object {
                  "email": Object {
                    "example": "john@email.com",
                    "type": "string",
                  },
                  "firstName": Object {
                    "example": "John",
                    "type": "string",
                  },
                  "id": Object {
                    "example": 10,
                    "format": "int64",
                    "type": "integer",
                  },
                  "lastName": Object {
                    "example": "James",
                    "type": "string",
                  },
                  "password": Object {
                    "example": "12345",
                    "type": "string",
                  },
                  "phone": Object {
                    "example": "12345",
                    "type": "string",
                  },
                  "userStatus": Object {
                    "description": "User Status",
                    "example": 1,
                    "format": "int32",
                    "type": "integer",
                  },
                  "username": Object {
                    "example": "theUser",
                    "type": "string",
                  },
                },
                "type": "object",
                "xml": Object {
                  "name": "user",
                },
              },
              "application/xml": Object {
                "$ref": "#/components/schemas/User",
                "properties": Object {
                  "email": Object {
                    "example": "john@email.com",
                    "type": "string",
                  },
                  "firstName": Object {
                    "example": "John",
                    "type": "string",
                  },
                  "id": Object {
                    "example": 10,
                    "format": "int64",
                    "type": "integer",
                  },
                  "lastName": Object {
                    "example": "James",
                    "type": "string",
                  },
                  "password": Object {
                    "example": "12345",
                    "type": "string",
                  },
                  "phone": Object {
                    "example": "12345",
                    "type": "string",
                  },
                  "userStatus": Object {
                    "description": "User Status",
                    "example": 1,
                    "format": "int32",
                    "type": "integer",
                  },
                  "username": Object {
                    "example": "theUser",
                    "type": "string",
                  },
                },
                "type": "object",
                "xml": Object {
                  "name": "user",
                },
              },
            },
          },
          "default": Object {
            "content": Object {},
          },
        },
      },
    },
    "/user/login": Object {
      "get": Object {
        "operationId": "loginUser",
        "parameters": Object {
          "header": Object {
            "properties": Object {
              "Accept": Object {
                "enum": Array [
                  "application/xml",
                  "application/json",
                ],
                "type": "string",
              },
            },
          },
          "query": Object {
            "properties": Object {
              "password": Object {
                "type": "string",
              },
              "username": Object {
                "type": "string",
              },
            },
            "required": Array [],
            "type": "object",
          },
        },
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "type": "string",
              },
              "application/xml": Object {
                "type": "string",
              },
            },
            "headers": Object {
              "properties": Object {
                "X-Expires-After": Object {
                  "format": "date-time",
                  "type": "string",
                },
                "X-Rate-Limit": Object {
                  "format": "int32",
                  "type": "integer",
                },
              },
              "required": Array [],
              "type": "object",
            },
          },
          "400": Object {
            "content": Object {},
          },
        },
      },
    },
    "/user/logout": Object {
      "get": Object {
        "operationId": "logoutUser",
        "parameters": Object {
          "header": Object {
            "properties": Object {
              "Accept": Object {
                "type": "string",
              },
            },
          },
        },
        "responses": Object {
          "default": Object {
            "content": Object {},
          },
        },
      },
    },
    "/user/{username}": Object {
      "delete": Object {
        "operationId": "deleteUser",
        "parameters": Object {
          "header": Object {
            "properties": Object {
              "Accept": Object {
                "type": "string",
              },
            },
          },
          "path": Object {
            "properties": Object {
              "username": Object {
                "type": "string",
              },
            },
            "required": Array [
              "username",
            ],
            "type": "object",
          },
        },
        "responses": Object {
          "400": Object {
            "content": Object {},
          },
          "404": Object {
            "content": Object {},
          },
        },
      },
      "get": Object {
        "operationId": "getUserByName",
        "parameters": Object {
          "header": Object {
            "properties": Object {
              "Accept": Object {
                "enum": Array [
                  "application/xml",
                  "application/json",
                ],
                "type": "string",
              },
            },
          },
          "path": Object {
            "properties": Object {
              "username": Object {
                "type": "string",
              },
            },
            "required": Array [
              "username",
            ],
            "type": "object",
          },
        },
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "$ref": "#/components/schemas/User",
                "properties": Object {
                  "email": Object {
                    "example": "john@email.com",
                    "type": "string",
                  },
                  "firstName": Object {
                    "example": "John",
                    "type": "string",
                  },
                  "id": Object {
                    "example": 10,
                    "format": "int64",
                    "type": "integer",
                  },
                  "lastName": Object {
                    "example": "James",
                    "type": "string",
                  },
                  "password": Object {
                    "example": "12345",
                    "type": "string",
                  },
                  "phone": Object {
                    "example": "12345",
                    "type": "string",
                  },
                  "userStatus": Object {
                    "description": "User Status",
                    "example": 1,
                    "format": "int32",
                    "type": "integer",
                  },
                  "username": Object {
                    "example": "theUser",
                    "type": "string",
                  },
                },
                "type": "object",
                "xml": Object {
                  "name": "user",
                },
              },
              "application/xml": Object {
                "$ref": "#/components/schemas/User",
                "properties": Object {
                  "email": Object {
                    "example": "john@email.com",
                    "type": "string",
                  },
                  "firstName": Object {
                    "example": "John",
                    "type": "string",
                  },
                  "id": Object {
                    "example": 10,
                    "format": "int64",
                    "type": "integer",
                  },
                  "lastName": Object {
                    "example": "James",
                    "type": "string",
                  },
                  "password": Object {
                    "example": "12345",
                    "type": "string",
                  },
                  "phone": Object {
                    "example": "12345",
                    "type": "string",
                  },
                  "userStatus": Object {
                    "description": "User Status",
                    "example": 1,
                    "format": "int32",
                    "type": "integer",
                  },
                  "username": Object {
                    "example": "theUser",
                    "type": "string",
                  },
                },
                "type": "object",
                "xml": Object {
                  "name": "user",
                },
              },
            },
          },
          "400": Object {
            "content": Object {},
          },
          "404": Object {
            "content": Object {},
          },
        },
      },
      "put": Object {
        "operationId": "updateUser",
        "parameters": Object {
          "header": Object {
            "properties": Object {
              "Accept": Object {
                "type": "string",
              },
            },
          },
          "path": Object {
            "properties": Object {
              "username": Object {
                "type": "string",
              },
            },
            "required": Array [
              "username",
            ],
            "type": "object",
          },
          "requestBody": Object {
            "$ref": "#/components/schemas/User",
            "properties": Object {
              "email": Object {
                "example": "john@email.com",
                "type": "string",
              },
              "firstName": Object {
                "example": "John",
                "type": "string",
              },
              "id": Object {
                "example": 10,
                "format": "int64",
                "type": "integer",
              },
              "lastName": Object {
                "example": "James",
                "type": "string",
              },
              "password": Object {
                "example": "12345",
                "type": "string",
              },
              "phone": Object {
                "example": "12345",
                "type": "string",
              },
              "userStatus": Object {
                "description": "User Status",
                "example": 1,
                "format": "int32",
                "type": "integer",
              },
              "username": Object {
                "example": "theUser",
                "type": "string",
              },
            },
            "type": "object",
            "xml": Object {
              "name": "user",
            },
          },
        },
        "responses": Object {
          "default": Object {
            "content": Object {},
          },
        },
      },
    },
  },
}
`;
